{"meta":{"version":1,"warehouse":"2.2.0"},"models":{"Asset":[{"_id":"themes/landscape/source/css/style.styl","path":"css/style.styl","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","path":"fancybox/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","path":"fancybox/jquery.fancybox.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","path":"fancybox/jquery.fancybox.pack.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/js/script.js","path":"js/script.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","path":"css/fonts/FontAwesome.otf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","path":"css/fonts/fontawesome-webfont.eot","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","path":"css/fonts/fontawesome-webfont.woff","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","path":"fancybox/helpers/fancybox_buttons.png","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","path":"fancybox/helpers/jquery.fancybox-buttons.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","path":"fancybox/helpers/jquery.fancybox-buttons.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","path":"fancybox/helpers/jquery.fancybox-media.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","path":"fancybox/helpers/jquery.fancybox-thumbs.css","modified":0,"renderable":1},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","path":"fancybox/helpers/jquery.fancybox-thumbs.js","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","path":"css/fonts/fontawesome-webfont.ttf","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","path":"css/fonts/fontawesome-webfont.svg","modified":0,"renderable":1},{"_id":"themes/landscape/source/css/images/banner.jpg","path":"css/images/banner.jpg","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","path":"css/jquery.fancybox.css","modified":0,"renderable":1},{"_id":"themes/maupassant/source/css/style.scss","path":"css/style.scss","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","path":"js/codeblock-resizer.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/fancybox.js","path":"js/fancybox.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/smartresize.js","path":"js/smartresize.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/search.js","path":"js/search.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/share.js","path":"js/share.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/js/totop.js","path":"js/totop.js","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/blank.gif","path":"fancybox/blank.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","path":"fancybox/fancybox_loading.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","path":"fancybox/fancybox_sprite.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","path":"fancybox/fancybox_overlay.png","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","path":"fancybox/fancybox_loading@2x.gif","modified":0,"renderable":1},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","path":"fancybox/fancybox_sprite@2x.png","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/favicon.ico","path":"favicon.ico","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","path":"css/main_style.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","path":"css/main_style.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","path":"css/main_style.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","path":"css/main_style.min.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","path":"fonts/icon.eot","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","path":"fonts/icon.svg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","path":"fonts/icon.woff","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","path":"fonts/icon.ttf","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","path":"sass/main_style.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","path":"components/reset-css/package.json","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","path":"components/reset-css/LICENSE","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","path":"components/reset-css/README.md","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","path":"components/reset-css/gruntfile.js","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/default_images/page_background.jpg","path":"default_images/page_background.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/default_images/post_background.jpg","path":"default_images/post_background.jpg","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","path":"components/reset-css/sass/main.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","path":"components/reset-css/sass/mobile-native.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","path":"components/reset-css/sass/mobile-single.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","path":"components/reset-css/dist/pc/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","path":"components/reset-css/dist/pc/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css","path":"components/reset-css/public/main/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","path":"components/reset-css/dist/mobile/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","path":"components/reset-css/dist/mobile/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css.map","path":"components/reset-css/public/main/reset.min.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css","path":"components/reset-css/public/mobile/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css.map","path":"components/reset-css/public/mobile/reset.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css","path":"components/reset-css/public/main/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css","path":"components/reset-css/public/mobile/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css.map","path":"components/reset-css/public/mobile/reset.min.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css.map","path":"components/reset-css/public/main/reset.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css","path":"components/reset-css/public/native/reset.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","path":"components/reset-css/sass/custom/imitation-native.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css.map","path":"components/reset-css/public/native/reset.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css","path":"components/reset-css/public/native/reset.min.css","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","path":"components/reset-css/sass/reset/macos.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","path":"components/reset-css/sass/reset/mobile.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css.map","path":"components/reset-css/public/native/reset.min.css.map","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","path":"components/reset-css/sass/reset/ie.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","path":"components/reset-css/sass/reset/basic.scss","modified":0,"renderable":1},{"_id":"themes/hexo-theme-laughing/source/default_images/author_head.gif","path":"default_images/author_head.gif","modified":0,"renderable":1}],"Cache":[{"_id":"themes/landscape/.npmignore","hash":"58d26d4b5f2f94c2d02a4e4a448088e4a2527c77","modified":1486856424486},{"_id":"themes/landscape/README.md","hash":"c7e83cfe8f2c724fc9cac32bd71bb5faf9ceeddb","modified":1486856424486},{"_id":"themes/landscape/LICENSE","hash":"c480fce396b23997ee23cc535518ffaaf7f458f8","modified":1486856424486},{"_id":"themes/landscape/Gruntfile.js","hash":"71adaeaac1f3cc56e36c49d549b8d8a72235c9b9","modified":1486856424486},{"_id":"themes/landscape/_config.yml","hash":"fb8c98a0f6ff9f962637f329c22699721854cd73","modified":1486856424486},{"_id":"themes/landscape/package.json","hash":"85358dc34311c6662e841584e206a4679183943f","modified":1486856424486},{"_id":"source/_posts/hello-world.md","hash":"8a02477044e2b77f1b262da2c48c01429e4a32e4","modified":1486856424471},{"_id":"themes/landscape/languages/default.yml","hash":"3083f319b352d21d80fc5e20113ddf27889c9d11","modified":1486856424518},{"_id":"themes/landscape/languages/nl.yml","hash":"12ed59faba1fc4e8cdd1d42ab55ef518dde8039c","modified":1486856424533},{"_id":"themes/landscape/languages/fr.yml","hash":"84ab164b37c6abf625473e9a0c18f6f815dd5fd9","modified":1486856424533},{"_id":"themes/landscape/languages/no.yml","hash":"965a171e70347215ec726952e63f5b47930931ef","modified":1486856424533},{"_id":"themes/landscape/languages/ru.yml","hash":"4fda301bbd8b39f2c714e2c934eccc4b27c0a2b0","modified":1486856424533},{"_id":"themes/landscape/languages/zh-TW.yml","hash":"53ce3000c5f767759c7d2c4efcaa9049788599c3","modified":1486856424533},{"_id":"themes/landscape/languages/zh-CN.yml","hash":"ca40697097ab0b3672a80b455d3f4081292d1eed","modified":1486856424533},{"_id":"themes/landscape/layout/archive.ejs","hash":"2703b07cc8ac64ae46d1d263f4653013c7e1666b","modified":1486856424533},{"_id":"themes/landscape/layout/category.ejs","hash":"765426a9c8236828dc34759e604cc2c52292835a","modified":1486856424533},{"_id":"themes/landscape/layout/index.ejs","hash":"aa1b4456907bdb43e629be3931547e2d29ac58c8","modified":1486856424533},{"_id":"themes/landscape/layout/layout.ejs","hash":"f155824ca6130080bb057fa3e868a743c69c4cf5","modified":1486856424533},{"_id":"themes/landscape/layout/page.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1486856424533},{"_id":"themes/landscape/layout/post.ejs","hash":"7d80e4e36b14d30a7cd2ac1f61376d9ebf264e8b","modified":1486856424533},{"_id":"themes/landscape/layout/tag.ejs","hash":"eaa7b4ccb2ca7befb90142e4e68995fb1ea68b2e","modified":1486856424549},{"_id":"themes/landscape/scripts/fancybox.js","hash":"aa411cd072399df1ddc8e2181a3204678a5177d9","modified":1486856424533},{"_id":"themes/landscape/layout/_widget/archive.ejs","hash":"beb4a86fcc82a9bdda9289b59db5a1988918bec3","modified":1486856424580},{"_id":"themes/landscape/layout/_widget/recent_posts.ejs","hash":"0d4f064733f8b9e45c0ce131fe4a689d570c883a","modified":1486856424580},{"_id":"themes/landscape/layout/_widget/category.ejs","hash":"dd1e5af3c6af3f5d6c85dfd5ca1766faed6a0b05","modified":1486856424580},{"_id":"themes/landscape/layout/_widget/tag.ejs","hash":"2de380865df9ab5f577f7d3bcadf44261eb5faae","modified":1486856424580},{"_id":"themes/landscape/layout/_widget/tagcloud.ejs","hash":"b4a2079101643f63993dcdb32925c9b071763b46","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/after-footer.ejs","hash":"82a30f81c0e8ba4a8af17acd6cc99e93834e4d5e","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/archive-post.ejs","hash":"c7a71425a946d05414c069ec91811b5c09a92c47","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/archive.ejs","hash":"931aaaffa0910a48199388ede576184ff15793ee","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/article.ejs","hash":"c4c835615d96a950d51fa2c3b5d64d0596534fed","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/head.ejs","hash":"4fe8853e864d192701c03e5cd3a5390287b90612","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/footer.ejs","hash":"93518893cf91287e797ebac543c560e2a63b8d0e","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/google-analytics.ejs","hash":"f921e7f9223d7c95165e0f835f353b2938e40c45","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/header.ejs","hash":"c21ca56f419d01a9f49c27b6be9f4a98402b2aa3","modified":1486856424580},{"_id":"themes/landscape/layout/_partial/mobile-nav.ejs","hash":"e952a532dfc583930a666b9d4479c32d4a84b44e","modified":1486856424596},{"_id":"themes/landscape/layout/_partial/sidebar.ejs","hash":"930da35cc2d447a92e5ee8f835735e6fd2232469","modified":1486856424596},{"_id":"themes/landscape/source/css/_extend.styl","hash":"222fbe6d222531d61c1ef0f868c90f747b1c2ced","modified":1486856424611},{"_id":"themes/landscape/source/css/_variables.styl","hash":"5e37a6571caf87149af83ac1cc0cdef99f117350","modified":1486856424611},{"_id":"themes/landscape/source/css/style.styl","hash":"a70d9c44dac348d742702f6ba87e5bb3084d65db","modified":1486856424611},{"_id":"themes/landscape/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1486856424627},{"_id":"themes/landscape/source/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1486856424627},{"_id":"themes/landscape/source/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1486856424627},{"_id":"themes/landscape/layout/_partial/post/category.ejs","hash":"c6bcd0e04271ffca81da25bcff5adf3d46f02fc0","modified":1486856424643},{"_id":"themes/landscape/layout/_partial/post/date.ejs","hash":"6197802873157656e3077c5099a7dda3d3b01c29","modified":1486856424643},{"_id":"themes/landscape/layout/_partial/post/nav.ejs","hash":"16a904de7bceccbb36b4267565f2215704db2880","modified":1486856424643},{"_id":"themes/landscape/layout/_partial/post/gallery.ejs","hash":"3d9d81a3c693ff2378ef06ddb6810254e509de5b","modified":1486856424643},{"_id":"themes/landscape/layout/_partial/post/tag.ejs","hash":"2fcb0bf9c8847a644167a27824c9bb19ac74dd14","modified":1486856424643},{"_id":"themes/landscape/layout/_partial/post/title.ejs","hash":"2f275739b6f1193c123646a5a31f37d48644c667","modified":1486856424643},{"_id":"themes/landscape/source/css/_partial/archive.styl","hash":"db15f5677dc68f1730e82190bab69c24611ca292","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/article.styl","hash":"10685f8787a79f79c9a26c2f943253450c498e3e","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/footer.styl","hash":"e35a060b8512031048919709a8e7b1ec0e40bc1b","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/comment.styl","hash":"79d280d8d203abb3bd933ca9b8e38c78ec684987","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/header.styl","hash":"85ab11e082f4dd86dde72bed653d57ec5381f30c","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/highlight.styl","hash":"bf4e7be1968dad495b04e83c95eac14c4d0ad7c0","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/mobile.styl","hash":"a399cf9e1e1cec3e4269066e2948d7ae5854d745","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/sidebar-aside.styl","hash":"890349df5145abf46ce7712010c89237900b3713","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/sidebar-bottom.styl","hash":"8fd4f30d319542babfd31f087ddbac550f000a8a","modified":1486856424674},{"_id":"themes/landscape/source/css/_partial/sidebar.styl","hash":"404ec059dc674a48b9ab89cd83f258dec4dcb24d","modified":1486856424674},{"_id":"themes/landscape/source/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1486856424674},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1486856424674},{"_id":"themes/landscape/source/css/_util/grid.styl","hash":"0bf55ee5d09f193e249083602ac5fcdb1e571aed","modified":1486856424674},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1486856424674},{"_id":"themes/landscape/source/css/_util/mixin.styl","hash":"44f32767d9fd3c1c08a60d91f181ee53c8f0dbb3","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486856424674},{"_id":"themes/landscape/source/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1486856424674},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1486856424674},{"_id":"themes/landscape/source/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1486856424674},{"_id":"themes/landscape/source/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1486856424674},{"_id":"public/2017/02/12/hello-world/index.html","hash":"f4a5dfc35bdd9754ad7065f81e7a3c62d92f8a4c","modified":1486858442681},{"_id":"public/archives/index.html","hash":"139e9a7ffc4807fafe1b640fe0128e57ebf22ed0","modified":1486862253112},{"_id":"public/archives/2017/index.html","hash":"139e9a7ffc4807fafe1b640fe0128e57ebf22ed0","modified":1486862253114},{"_id":"public/archives/2017/02/index.html","hash":"139e9a7ffc4807fafe1b640fe0128e57ebf22ed0","modified":1486862253113},{"_id":"public/index.html","hash":"139e9a7ffc4807fafe1b640fe0128e57ebf22ed0","modified":1486862253114},{"_id":"public/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486856630893},{"_id":"public/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486856630893},{"_id":"public/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486856630893},{"_id":"public/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486856630893},{"_id":"public/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486856630893},{"_id":"public/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486856630893},{"_id":"public/css/fonts/FontAwesome.otf","hash":"b5b4f9be85f91f10799e87a083da1d050f842734","modified":1486856630893},{"_id":"public/css/fonts/fontawesome-webfont.eot","hash":"7619748fe34c64fb157a57f6d4ef3678f63a8f5e","modified":1486856630909},{"_id":"public/css/fonts/fontawesome-webfont.woff","hash":"04c3bf56d87a0828935bd6b4aee859995f321693","modified":1486856630909},{"_id":"public/fancybox/helpers/fancybox_buttons.png","hash":"e385b139516c6813dcd64b8fc431c364ceafe5f3","modified":1486856630909},{"_id":"public/css/fonts/fontawesome-webfont.ttf","hash":"7f09c97f333917034ad08fa7295e916c9f72fd3f","modified":1486856633401},{"_id":"public/fancybox/jquery.fancybox.css","hash":"aaa582fb9eb4b7092dc69fcb2d5b1c20cca58ab6","modified":1486856633416},{"_id":"public/js/script.js","hash":"2876e0b19ce557fca38d7c6f49ca55922ab666a1","modified":1486856633416},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.js","hash":"dc3645529a4bf72983a39fa34c1eb9146e082019","modified":1486856633416},{"_id":"public/fancybox/helpers/jquery.fancybox-buttons.css","hash":"1a9d8e5c22b371fcc69d4dbbb823d9c39f04c0c8","modified":1486856633416},{"_id":"public/fancybox/helpers/jquery.fancybox-media.js","hash":"294420f9ff20f4e3584d212b0c262a00a96ecdb3","modified":1486856633416},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.css","hash":"4ac329c16a5277592fc12a37cca3d72ca4ec292f","modified":1486856633416},{"_id":"public/fancybox/helpers/jquery.fancybox-thumbs.js","hash":"47da1ae5401c24b5c17cc18e2730780f5c1a7a0c","modified":1486856633432},{"_id":"public/css/style.css","hash":"fffb3966bf36057a325498aba9ce3a2ea7bd79e1","modified":1486856633432},{"_id":"public/fancybox/jquery.fancybox.pack.js","hash":"9e0d51ca1dbe66f6c0c7aefd552dc8122e694a6e","modified":1486856633432},{"_id":"public/fancybox/jquery.fancybox.js","hash":"d08b03a42d5c4ba456ef8ba33116fdbb7a9cabed","modified":1486856633432},{"_id":"public/css/fonts/fontawesome-webfont.svg","hash":"46fcc0194d75a0ddac0a038aee41b23456784814","modified":1486856633432},{"_id":"public/css/images/banner.jpg","hash":"f44aa591089fcb3ec79770a1e102fd3289a7c6a6","modified":1486856633448},{"_id":"themes/maupassant/.travis.yml","hash":"f8da426b97088e4caa5226cff219a5d95087961f","modified":1486856777670},{"_id":"themes/maupassant/LICENSE","hash":"b7ea1dbb2fed3410d78bc7c125e1d80927b56981","modified":1486856777670},{"_id":"themes/maupassant/README.md","hash":"1e0e701e5ea813f7951f3fe3dac2de5ccf0ba0db","modified":1486856777670},{"_id":"themes/maupassant/_config.yml","hash":"294eb40167fc206ec9cecb7896abcbab216e4234","modified":1486856777670},{"_id":"themes/maupassant/package.json","hash":"04ca87ea475f37841d3610fe5806feb8022416c3","modified":1486856777717},{"_id":"themes/maupassant/.git/HEAD","hash":"acbaef275e46a7f14c1ef456fff2c8bbe8c84724","modified":1486856777623},{"_id":"themes/maupassant/.git/config","hash":"3dbf80769093e21ccab51f5f2b02a6d764498803","modified":1486856777655},{"_id":"themes/maupassant/.git/description","hash":"9635f1b7e12c045212819dd934d809ef07efa2f4","modified":1486856772933},{"_id":"themes/maupassant/.git/index","hash":"25bb86106439bf4057d58ada197fe4048e268646","modified":1486856777733},{"_id":"themes/maupassant/.git/packed-refs","hash":"965458983a3bb3e282036aa5812345d6370fe31d","modified":1486856777608},{"_id":"themes/maupassant/languages/de-DE.yml","hash":"25d1d8cd8113045a7603c14af1ea1539fc6456ed","modified":1486856777686},{"_id":"themes/maupassant/languages/en.yml","hash":"6c5fc2cec7e44306d97bc7902e9765389d21c363","modified":1486856777686},{"_id":"themes/maupassant/languages/es-ES.yml","hash":"3cc9312fbdba4a8f8e8254804121e4724c719bcc","modified":1486856777686},{"_id":"themes/maupassant/languages/fr-FR.yml","hash":"3a50568f200b9c1258415b53727e42c6b6c7ea0b","modified":1486856777686},{"_id":"themes/maupassant/languages/ko.yml","hash":"a454bcec60113507bc1d593a699849822386c196","modified":1486856777686},{"_id":"themes/maupassant/languages/zh-CN.yml","hash":"41f7c09365cbd5ba1b8906191ee07bc75094185a","modified":1486856777686},{"_id":"themes/maupassant/languages/zh-TW.yml","hash":"46659764e31c7866af436d98d4fabb9da122037a","modified":1486856777686},{"_id":"themes/maupassant/layout/archive.jade","hash":"d70d1ed241b1a431a2434768d02bb2de03070f70","modified":1486856777702},{"_id":"themes/maupassant/layout/base-without-sidebar.jade","hash":"bcb120106d2b4c1b2f8e4b8e7ab571b46d26b4e3","modified":1486856777702},{"_id":"themes/maupassant/layout/base.jade","hash":"b0a3cf5a7bfaa709bcd23691163117d8407a75c9","modified":1486856777702},{"_id":"themes/maupassant/layout/index.jade","hash":"24447c56462eb86a7a0b08f8d24c3c42451b4c02","modified":1486856777702},{"_id":"themes/maupassant/layout/page.jade","hash":"1e98aa785073dc1bbfe70f2863bc19fe287483b9","modified":1486856777702},{"_id":"themes/maupassant/layout/post.jade","hash":"f68f483242409f501bbc8b50ff129edd981087e2","modified":1486856777702},{"_id":"themes/maupassant/layout/single-column.jade","hash":"4be14ac93c154216e174fe0c4c05608c26f59c42","modified":1486856777702},{"_id":"themes/maupassant/layout/timeline.jade","hash":"ee1e8e4e8fdf61c6d19f1f7fe31ab50ab1465a8d","modified":1486856777702},{"_id":"themes/maupassant/.git/hooks/applypatch-msg.sample","hash":"4de88eb95a5e93fd27e78b5fb3b5231a8d8917dd","modified":1486856772933},{"_id":"themes/maupassant/.git/hooks/commit-msg.sample","hash":"ee1ed5aad98a435f2020b6de35c173b75d9affac","modified":1486856772933},{"_id":"themes/maupassant/.git/hooks/pre-applypatch.sample","hash":"f208287c1a92525de9f5462e905a9d31de1e2d75","modified":1486856772948},{"_id":"themes/maupassant/.git/hooks/post-update.sample","hash":"b614c2f63da7dca9f1db2e7ade61ef30448fc96c","modified":1486856772933},{"_id":"themes/maupassant/.git/hooks/pre-commit.sample","hash":"36aed8976dcc08b5076844f0ec645b18bc37758f","modified":1486856772979},{"_id":"themes/maupassant/.git/hooks/pre-push.sample","hash":"5c8518bfd1d1d3d2c1a7194994c0a16d8a313a41","modified":1486856772979},{"_id":"themes/maupassant/.git/hooks/pre-receive.sample","hash":"705a17d259e7896f0082fe2e9f2c0c3b127be5ac","modified":1486856772979},{"_id":"themes/maupassant/.git/hooks/pre-rebase.sample","hash":"5885a56ab4fca8075a05a562d005e922cde9853b","modified":1486856772979},{"_id":"themes/maupassant/.git/hooks/prepare-commit-msg.sample","hash":"2b6275eda365cad50d167fe3a387c9bc9fedd54f","modified":1486856772979},{"_id":"themes/maupassant/.git/hooks/update.sample","hash":"e729cd61b27c128951d139de8e7c63d1a3758dde","modified":1486856772979},{"_id":"themes/maupassant/.git/info/exclude","hash":"c879df015d97615050afa7b9641e3352a1e701ac","modified":1486856772979},{"_id":"themes/maupassant/.git/logs/HEAD","hash":"8e28fecb52143701530c0afc2b9deae46b4fc0db","modified":1486856777639},{"_id":"themes/maupassant/layout/_partial/after_footer.jade","hash":"7e69266c3d1b9d872617046ca0630998200072fd","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/footer.jade","hash":"87e096caac8e780c0894ef1844f59246f861bbe7","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/comments.jade","hash":"b3a0b0ce0642f2bfe9df94b075c0c2a083871e1b","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/helpers.jade","hash":"9e44f6d32f2449b4109c33118f8285fa2fc7b023","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/mathjax.jade","hash":"ac6e3a92bf18ab6bbd0e041b6796b295bae963ee","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/mathjax2.jade","hash":"234a792e64ba208fa97d2f99772ece23056a53ec","modified":1486856777686},{"_id":"themes/maupassant/layout/_partial/paginator.jade","hash":"03ad0c49ae6f8a999ae35b38d08e25775f51f52a","modified":1486856777702},{"_id":"themes/maupassant/layout/_partial/post_nav.jade","hash":"b11d9e6000449838b17f508429f29ffb60f53096","modified":1486856777702},{"_id":"themes/maupassant/layout/_partial/tag.jade","hash":"6145b483b271bba05ad1db7c039fe352a768215b","modified":1486856777702},{"_id":"themes/maupassant/layout/_partial/totop.jade","hash":"eb91a3baf9411188c7c8130f63a674f541ca9c81","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/category.jade","hash":"7707b4c718a935882ee986d0bb0078e50cdbea64","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/recent_comments.jade","hash":"0b9e78e7f20bc69690e05f2e0c956bded9058a84","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/recent_posts.jade","hash":"770b6c41cbf7969ed33adf87eec3be6f50a0911b","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/links.jade","hash":"2a1dd6a0e2befd073e3347347994d8dcd2047879","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/search.jade","hash":"c5301ca7f2ec24d790fd7f35f69f8fd8acbdb725","modified":1486856777702},{"_id":"themes/maupassant/layout/_widget/tag.jade","hash":"37f236365b153fc40324391e5a602d6d50014e18","modified":1486856777702},{"_id":"themes/maupassant/source/css/jquery.fancybox.css","hash":"0d142e11e27e9de1a325c32369c42254101ddd34","modified":1486856777717},{"_id":"themes/maupassant/source/css/style.scss","hash":"3a00b275276847b054e71ea2eee47f548cd55dbf","modified":1486856777717},{"_id":"themes/maupassant/source/js/codeblock-resizer.js","hash":"c77270e684a60babc1abb7353e700ecdc5a66d30","modified":1486856777717},{"_id":"themes/maupassant/source/js/fancybox.js","hash":"8a993c1c4ad40789d2960b682cb2130382a0f26a","modified":1486856777717},{"_id":"themes/maupassant/source/js/smartresize.js","hash":"150ab1cad40d7ae081b0896b13f7d7cbac4e6338","modified":1486856777733},{"_id":"themes/maupassant/source/js/search.js","hash":"dbda07a03e6edc73f1dc28a068c24a6037b97b56","modified":1486856777717},{"_id":"themes/maupassant/source/js/share.js","hash":"bb6880e2e8e187b576daf326476f09b0907fbe14","modified":1486856777717},{"_id":"themes/maupassant/source/js/totop.js","hash":"15de186b089c245fe60766d509b587919f05ff23","modified":1486856777733},{"_id":"themes/maupassant/source/fancybox/blank.gif","hash":"2daeaa8b5f19f0bc209d976c02bd6acb51b00b0a","modified":1486856777717},{"_id":"themes/maupassant/source/fancybox/fancybox_loading.gif","hash":"1a755fb2599f3a313cc6cfdb14df043f8c14a99c","modified":1486856777717},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite.png","hash":"17df19f97628e77be09c352bf27425faea248251","modified":1486856777717},{"_id":"themes/maupassant/source/fancybox/fancybox_overlay.png","hash":"b3a4ee645ba494f52840ef8412015ba0f465dbe0","modified":1486856777717},{"_id":"themes/maupassant/source/fancybox/fancybox_loading@2x.gif","hash":"273b123496a42ba45c3416adb027cd99745058b0","modified":1486856777717},{"_id":"themes/maupassant/source/fancybox/fancybox_sprite@2x.png","hash":"30c58913f327e28f466a00f4c1ac8001b560aed8","modified":1486856777717},{"_id":"themes/maupassant/.git/objects/pack/pack-c70ed9a27f076e153e10a9401c5b7b658b463745.idx","hash":"707d56b387a3799f8fdf471c051d10d5b5a63488","modified":1486856777264},{"_id":"themes/maupassant/.git/refs/heads/master","hash":"e7de97753d00149057ca0ae9ed395fd347042cbf","modified":1486856777639},{"_id":"themes/maupassant/.git/logs/refs/heads/master","hash":"8e28fecb52143701530c0afc2b9deae46b4fc0db","modified":1486856777639},{"_id":"themes/maupassant/.git/refs/remotes/origin/HEAD","hash":"d9427cda09aba1cdde5c69c2b13c905bddb0bc51","modified":1486856777608},{"_id":"themes/maupassant/.git/logs/refs/remotes/origin/HEAD","hash":"8e28fecb52143701530c0afc2b9deae46b4fc0db","modified":1486856777608},{"_id":"themes/maupassant/.git/objects/pack/pack-c70ed9a27f076e153e10a9401c5b7b658b463745.pack","hash":"67c6d6a28e6efa3ec20dd6cb62c9ac7699b1cba1","modified":1486856777342},{"_id":"public/css/style.scss","hash":"3a00b275276847b054e71ea2eee47f548cd55dbf","modified":1486856831883},{"_id":"public/css/jquery.fancybox.css","hash":"f42f761157f26244673eb2f4a9215c70956f80dc","modified":1486856831908},{"_id":"public/js/codeblock-resizer.js","hash":"5d0b786d60bf225d9eabcc9cece2719ff4d9b6cd","modified":1486856831908},{"_id":"public/js/smartresize.js","hash":"3ef157fd877167e3290f42c67a624ea375a46c24","modified":1486856831909},{"_id":"public/js/fancybox.js","hash":"13c4781570339f4fba76a3d7f202e442817dd605","modified":1486856831909},{"_id":"public/js/share.js","hash":"f49776e0baa2b913ddc7a20db24b3edd469c8343","modified":1486856831909},{"_id":"public/js/search.js","hash":"0c0630e2ef213701d393b041f10572e951a27985","modified":1486856831909},{"_id":"public/js/totop.js","hash":"7dbf8fcf582a4fb6eb9b2c60d6de9f9c2091ec4c","modified":1486856831909},{"_id":"themes/hexo-theme-laughing/.bowerrc","hash":"cd6df79a8be68d066ccb35c5470fba3e6f12bb00","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/.gitignore","hash":"d71b6aff39fb813e8f89ce8dbffba729b3090600","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/package.json","hash":"708b2e372f5e575f36755e186c51beba167fa36f","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/gruntfile.js","hash":"dce145bcbf831af91d778a0f05adf8ab3f648262","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/_config.yml","hash":"52b6629f5af5a91a36f11af7da3ee1aa79b0bdf1","modified":1486862206043},{"_id":"themes/hexo-theme-laughing/README.md","hash":"a5a7ac8bc49a6e824e860ed629c7aa95474825a2","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/index.pug","hash":"342ec754890a8e4f037f4c47938a91468f4decee","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/favicon.ico","hash":"3c779118c15f1734e08d83ec62d8e0d73c61339b","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/post.pug","hash":"fd10e59f17b02653b0e2faafaa0a98af134c7713","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/_partial/footer.pug","hash":"73a26c2c5cedfe6ab7c31b7e58639e62d0c64bb0","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/_partial/layout.pug","hash":"baccfe03c0fbe4e2cfc2f2348a1ac8c40e0356da","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/_partial/page_header.pug","hash":"335d30c0e61d76f34d8cc2680a4feb2d90207179","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/_partial/pagination.pug","hash":"0622c7633acdeb16d51979e05e360a2b69b13495","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/layout/_partial/post_header.pug","hash":"37c76bf1993cc8cf705ed9585c22411db6cfa9b5","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css","hash":"22400486d5b19b6bc4a736367bdc6bfb98920c0d","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.css.map","hash":"359d4f06ac5698266553d3f618dafd009eaa8264","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css","hash":"e676f44d56e4311f61e9e2949b1db6192b818afd","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/css/main_style.min.css.map","hash":"b75578628161e86c5cee8089a49fa38013c6eebc","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.eot","hash":"3fee4b8f17f7877e8e0a6a803624cc86e87ba906","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.svg","hash":"46baa1fcacc78b663e9483a9193803ab5f45a123","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.woff","hash":"a382f6643ef3c4cf3412e595a045b136fb32d21c","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/fonts/icon.ttf","hash":"915774eca49aa56a6d6a861b10ca9d03b88f59ab","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/main_style.scss","hash":"1691b70ab05d3347088370b925635401022fce29","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.gitignore","hash":"dc763f22f9c31a8daefbf47989e76da901ffd47c","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/.bower.json","hash":"870be6ad54cc1c5284d38b1cd104ac8412054498","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/package.json","hash":"c859e74c55d08e683d72ada52ad786f49eb19be2","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/README.md","hash":"42ba92ca71daff15d0e27ae9e1624e86298f88b8","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/color.scss","hash":"2dfaa41b7f960473b9c2a154989791f643737211","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/media.scss","hash":"7eb47453422b703af4a272f64b44a5e062f133ee","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/mixin.scss","hash":"37309124d68d74e1d920dae40546c6dfa53c4d86","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/hightlight.scss","hash":"2be013af766705fcac2cbcb8058b5eed2a314550","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_util/icon.scss","hash":"52f48435e4a1c3e599ef585d5e22aeb20655a886","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/duoshuo.scss","hash":"033b88d981fea35adad1b2ad96fbf5a497598cc3","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/pagination.scss","hash":"6d26b9990bf957e06af87f36aafee1e3bdb505ef","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/footer.scss","hash":"353e3e086aa70849c924fb8789b30b5a996d8676","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/navication.scss","hash":"08a01a3b4d627cff6b2521114378578625f779da","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/default_images/page_background.jpg","hash":"306e3a4e44a09c749db6c9274053b10df8ddd116","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/default_images/post_background.jpg","hash":"52540d07264088db79c254fd52d151e573568179","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/list.scss","hash":"869bf27beac3c5e9fcfb7edc0a5cb19730ec3b2c","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/page_header.scss","hash":"8a9eda2120fb84bcd0524d8788f7f8fa8fb8167e","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/layout.scss","hash":"89ab790fc78f792cc695ab02ec832f5049c45cda","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/_common.scss","hash":"e43ee0cc485b6e8ee11e33434dd8472e449f8804","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post.scss","hash":"28c7663b6a5a9b3aaecd767159526840c4ef9294","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/sass/_partial/post_header.scss","hash":"69ebc01eefc5ec9868623c891652194574ecdc55","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css","hash":"8879756ab7e775eaf29e661503e4e472bde804d9","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css.map","hash":"8132d37d36c5b1d9826f9896dc61165229178c42","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css","hash":"f531c995853af9871b8be1c7c324a8f65d1c355a","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.css.map","hash":"a2ccb8da7fe8a22edcf91bf2171ebca67cb6c093","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.min.css","hash":"1a81aa7c066cf34dbc61709c9c11d2ef053ae456","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css","hash":"64fbf2a4717a88d31b9b85806f39ec8d3edfb538","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/mobile/reset.min.css.map","hash":"7a98495520ecb5d4badd36d6145d7b22f0a57c5b","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/main/reset.css.map","hash":"af850e4c2b2ab129e8c419cdd3da8dc3190449ed","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css","hash":"6cbf4e09d9f8f5fd2c6b961cf4f473c41a5cde48","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/custom/_microsoft-yahei.scss","hash":"4c29be667ae1decd0cc2da424e89c792b901eefe","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.css.map","hash":"926d39cb34066c99e9ba3185926865b73c943288","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css","hash":"fa81cc36008bb69fefc9986d3e3c479d14ad3a09","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/public/native/reset.min.css.map","hash":"840a041a42aa45b3dafccaaeabf869076d7cc9de","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1486046120000},{"_id":"themes/hexo-theme-laughing/source/default_images/author_head.gif","hash":"061a5b67dcb720ce4f5aa98ce5e17a5fd23757d6","modified":1486046120000},{"_id":"public/favicon.ico","hash":"3c779118c15f1734e08d83ec62d8e0d73c61339b","modified":1486857836224},{"_id":"public/css/main_style.css.map","hash":"359d4f06ac5698266553d3f618dafd009eaa8264","modified":1486857836224},{"_id":"public/css/main_style.min.css.map","hash":"b75578628161e86c5cee8089a49fa38013c6eebc","modified":1486857836224},{"_id":"public/fonts/icon.eot","hash":"3fee4b8f17f7877e8e0a6a803624cc86e87ba906","modified":1486857836225},{"_id":"public/fonts/icon.svg","hash":"46baa1fcacc78b663e9483a9193803ab5f45a123","modified":1486857836225},{"_id":"public/fonts/icon.woff","hash":"a382f6643ef3c4cf3412e595a045b136fb32d21c","modified":1486857836225},{"_id":"public/fonts/icon.ttf","hash":"915774eca49aa56a6d6a861b10ca9d03b88f59ab","modified":1486857836226},{"_id":"public/sass/main_style.scss","hash":"1691b70ab05d3347088370b925635401022fce29","modified":1486857836226},{"_id":"public/components/reset-css/LICENSE","hash":"b2d04276dc82c827b32e34c9d7b473ad5c0c0f4f","modified":1486857836226},{"_id":"public/components/reset-css/sass/mobile-native.scss","hash":"ce2116425e00aa7a450cfcd93c86f95213b7deed","modified":1486857836226},{"_id":"public/components/reset-css/sass/main.scss","hash":"b34aeac5d981e3ac4c46a292e6197f2f7f860b32","modified":1486857836226},{"_id":"public/components/reset-css/sass/mobile-single.scss","hash":"80c5c752656b61690e8df463e5b45b787621c249","modified":1486857836227},{"_id":"public/components/reset-css/public/main/reset.min.css.map","hash":"8132d37d36c5b1d9826f9896dc61165229178c42","modified":1486857836227},{"_id":"public/components/reset-css/public/mobile/reset.css.map","hash":"a2ccb8da7fe8a22edcf91bf2171ebca67cb6c093","modified":1486857836227},{"_id":"public/components/reset-css/public/mobile/reset.min.css.map","hash":"7a98495520ecb5d4badd36d6145d7b22f0a57c5b","modified":1486857836227},{"_id":"public/components/reset-css/public/main/reset.css.map","hash":"af850e4c2b2ab129e8c419cdd3da8dc3190449ed","modified":1486857836228},{"_id":"public/components/reset-css/sass/custom/imitation-native.scss","hash":"db910f6a7a008bc3c47a4ccebb0f9301b1dd6f58","modified":1486857836228},{"_id":"public/components/reset-css/public/native/reset.css.map","hash":"926d39cb34066c99e9ba3185926865b73c943288","modified":1486857836229},{"_id":"public/components/reset-css/sass/reset/macos.scss","hash":"c4863f82e33f87dd4c724d68906a4cbe2b935e6c","modified":1486857836230},{"_id":"public/components/reset-css/sass/reset/mobile.scss","hash":"391a7886de3256582d37a252f743a2cd08ae0964","modified":1486857836230},{"_id":"public/components/reset-css/public/native/reset.min.css.map","hash":"840a041a42aa45b3dafccaaeabf869076d7cc9de","modified":1486857836232},{"_id":"public/components/reset-css/sass/reset/ie.scss","hash":"032d5f6831a43ffe278b711331308a17b0fa0848","modified":1486857836232},{"_id":"public/components/reset-css/sass/reset/basic.scss","hash":"523a6deffbd0699f3225adbdeda5d0fc5c6e1e4d","modified":1486857836233},{"_id":"public/css/main_style.min.css","hash":"e676f44d56e4311f61e9e2949b1db6192b818afd","modified":1486857836307},{"_id":"public/components/reset-css/package.json","hash":"cafa376792f3516b399c2dff52f6de75fe5456e7","modified":1486857836307},{"_id":"public/components/reset-css/gruntfile.js","hash":"eda72e7747c8952dcc98d9249a5d8ca2279a89d6","modified":1486857836307},{"_id":"public/components/reset-css/README.html","hash":"8e6de58e63d6a04c3c1160409e17e7b255202704","modified":1486857836307},{"_id":"public/components/reset-css/dist/pc/reset.min.css","hash":"d0e76dd5d95e95deee9c745438d8bf36b342081c","modified":1486857836307},{"_id":"public/components/reset-css/dist/pc/reset.css","hash":"9ed2cbf6f1dd7df99849ad22700e9339914a358a","modified":1486857836307},{"_id":"public/components/reset-css/dist/mobile/reset.css","hash":"c157f0c30827d47590cb99a25a34eb712ca1890a","modified":1486857836307},{"_id":"public/components/reset-css/public/main/reset.css","hash":"8879756ab7e775eaf29e661503e4e472bde804d9","modified":1486857836307},{"_id":"public/components/reset-css/dist/mobile/reset.min.css","hash":"752bcb20555fb6152867a7437aacf079f3c93c36","modified":1486857836307},{"_id":"public/components/reset-css/public/mobile/reset.css","hash":"f531c995853af9871b8be1c7c324a8f65d1c355a","modified":1486857836307},{"_id":"public/components/reset-css/public/main/reset.min.css","hash":"1a81aa7c066cf34dbc61709c9c11d2ef053ae456","modified":1486857836307},{"_id":"public/components/reset-css/public/mobile/reset.min.css","hash":"64fbf2a4717a88d31b9b85806f39ec8d3edfb538","modified":1486857836307},{"_id":"public/components/reset-css/public/native/reset.css","hash":"6cbf4e09d9f8f5fd2c6b961cf4f473c41a5cde48","modified":1486857836307},{"_id":"public/components/reset-css/public/native/reset.min.css","hash":"fa81cc36008bb69fefc9986d3e3c479d14ad3a09","modified":1486857836307},{"_id":"public/css/main_style.css","hash":"22400486d5b19b6bc4a736367bdc6bfb98920c0d","modified":1486857836307},{"_id":"public/default_images/page_background.jpg","hash":"306e3a4e44a09c749db6c9274053b10df8ddd116","modified":1486857836307},{"_id":"public/default_images/post_background.jpg","hash":"52540d07264088db79c254fd52d151e573568179","modified":1486857836307},{"_id":"public/default_images/author_head.gif","hash":"061a5b67dcb720ce4f5aa98ce5e17a5fd23757d6","modified":1486857836404},{"_id":"source/ReactJS 实践心得 key 属性的原理和用法/index.html","hash":"e1fb8912909b4d0e21cddac3690d812f93e42557","modified":1486829015726},{"_id":"source/Welcome to Trust blog/index.html","hash":"bf70425feff3a3a0901cafd1e617fc32e48ea26b","modified":1486829015728},{"_id":"public/ReactJS 实践心得 key 属性的原理和用法/index.html","hash":"7557f8a4aa8d88420db3da8381677f5b5cae1a17","modified":1486858830556},{"_id":"public/Welcome to Trust blog/index.html","hash":"722f302fb5fc04f7cf784b28da30415f05860c84","modified":1486858830556},{"_id":"source/_posts/ReactJS 实践心得 key 属性的原理和用法.md","hash":"d0c5ed37c5b3211711d0adbae781c084604017b8","modified":1480652474000},{"_id":"source/_posts/Welcome to Trust blog.md","hash":"327528139c85e99046bf98d5bbc644f42e0f6fdf","modified":1480652474000},{"_id":"public/2017/02/12/Welcome to Trust blog/index.html","hash":"d6d56d69568b0ff4a64d6983debb9f14ede24900","modified":1486862253112},{"_id":"public/2017/02/12/ReactJS 实践心得 key 属性的原理和用法/index.html","hash":"df6ece3245df33de076fa61f208f7f508d7a0bef","modified":1486862253114}],"Category":[],"Data":[],"Page":[],"Post":[{"title":"ReactJS 实践心得 key 属性的原理和用法","_content":"\n####ReactJS && ReactNative ：\n>本章主要讲解key属性的原理和用法\n\n<!-- More -->\n\n#####首先你需要知道：\n\n<span style=\"color:#188eee;font-weight:bold\">React与ReactJS && React Native</span>\n\n>**React**是由**ReactJS**与**React Native**组成\n\n>其中**ReactJS**是Facebook开源的一个前端框架\n\n>**React Native**是**ReactJS**思想在*native*上的体现！\n\n<span style=\"color:red\">既然学过React Native，那你么reactJS呢？</span>\n\n>这已经是一个非常流行的框架，其实作为react-native入门，了解一些就够用了。 \n\n<span style=\"color:red\">那么JSX呢？</span>\n\n**JSX并不是一门新的语言，仅仅是个语法糖**，允许开发者在JavaScript中书写HTML语法。\n最后**每个HTML标签都转化为JavaScript代码来运行**。\n\n<span style=\"color:#188eee;font-weight:bold\">Start 今天的正题</span>\n\n我们知道，React 元素可以具有一个特殊的属性 key，这个属性不是给用户自己用的，而是给 React 自己用的。\n\n如果我们动态地创建 React 元素，而且 React 元素内包含数量或顺序不确定的子元素时，我们就需要提供 key 这个特殊的属性。\n\n如果你有下面这样的代码：\n```javascript\nconst UserList = props => (\n <div>\n  <h3>用户列表</h3>\n  {props.users.map(\n\tu => <div>{u.id}:{u.name}</div>)\n  }  \n\t// 没有提供 key\n </div>\n)\n```\nReact 会在控制台打印出报警信息：\n<span style=\"color:red\">\n```\nWarning: Each child in an array or iterator should have a unique \"key\" prop. Check the render method of `App`. See https://fb.me/react-warning-keys for more information.\n```\n</span>\n你必须为数组中的元素提供唯一的 key 属性，就像下面这样：\n```javascript\nconst UserList = props => (\n\t  <div>\n\t    <h3>用户列表</h3>\n\t   {props.users.map(u => <div key={u.id}>{u.id}:{u.name}</div>)}  \n\t\t// 提供了 key\n\t  </div>\n)\n```\n#####为什么呢？\n\n我们知道当组件的属性发生了变化，其 render 方法会被重新调用，组件会被重新渲染.\n#####比如: \n\nUserList组件的users属性改变了，就得重新渲染UserList组件，\n包括外部的`<div>`（容器），内部的一个`<h3>`和若干个`<div>`（每一个描述一个用户）。\n\n对后一种 `<div>`（表示用户的），由于其处在一个长度不确定的数组中，\nReact 需要判断，对数组中的每一项，到底是新建一个元素加入到页面中，还是更新原来的元素。\n\n#####比如以下几种情况：\n\n\t[{name: '张三', age: 20}] => [{name: '张三', age: 21}]\n>这种情况明显只需要更新元素，没有必要重新创建元素。\n\n因为人还是那个人，除了 age，其他信息没有变，显示用户姓名的那个（更小的）元素，是不需要更新（被 ReactDOM 操作到）的。\n\n\t[{name: '张三'}] => [{name: '张三'}, {name: '李四'}] \n>这种情况，显然需要添加一个新元素来表示李四，这个新元素对应的 DOM 元素会被插入到页面中。\n\n\t[{name: '张三'}] => [{name: '李四'}]\n>这种情况就有点复杂了，似乎两种方案都可以。\n>可以把表示张三的元素删掉，为李四新建一个，当然是非常合理的选择。\n>但是直接把张三的元素换成李四，似乎也无不可。\n\n实际上，如果真的认为上述第3种的后一种方案也无不可，那可是大错特错了。为什么呢：\n考虑这种情况：\n\n\t[{name: '张三'}, {name: '李四'}] => [{name: '李四'}, {name: '张三'}]\n\n<span style=\"color:red\">难道也需要把张三的元素更新成李四的，李四的元素更新成张三的吗？</span>\n\n那么，为数组中的元素传一个唯一的 key（比如用户的 ID），就很好地解决了这个问题。\n\nReact 比较更新前后的元素 key 值，如果相同则更新，如果不同则销毁之前的，重新创建一个元素。\n\n<span style=\"color:red\">那么，为什么只有数组中的元素需要有唯一的 key，而其他的元素（比如上面的`<h3>`用户列表`</h3>`）则不需要呢？</span>\n\n>答案是：React 有能力辨别出，更新前后元素的对应关系。\n\n这一点，也许直接看 JSX 不够明显，看 Babel 转换后的 React.createElement 则清晰很多：\n>转换前:\n\n```javascript\nconst element = (\n  <div>\n    <h3>example</h3>\n    {[<p key={1}>hello</p>, <p key={2}>world</p>]}\n  </div>\n)\n```\n>转换后\n\n```javascript\n\"use strict\";\nvar element = React.createElement(\n  \"div\",\n  null,\n  React.createElement(\"h3\",null,\"example\"),\n  [\n    React.createElement(\"p\",{ key: 1 },\"hello\"), \n    React.createElement(\"p\",{ key: 2 },\"world\")\n  ]\n)\n```\n不管 props 如何变化，数组外的每个元素始终出现在 React.createElement() 参数列表中的固定位置，这个位置就是天然的 key。\n\n#####题外话:\n\n初学 React 时还容易产生另一个困惑;\n\n<span style=\"color:red\">那就是为什么 JSX 不支持 if 表达式来有选择地输出</span>\n例如：\n\n\t{if(yes){ <div {...props}/>}})\n\n而必须采用三元运算符来完成这项工作\n必须这样：\n\n\t{yes ? <div {...props}/>} : null)\n\n那是因为，React 需要一个 null 去占住那个元素本来的位置。\n\n#####吐个槽：\n\n曾经，我天真的以为 key 这个元素只应在数组中使用,直到我在一个复杂的项目中写出了及其恶心的 **componentWillReceiveProps**方法。我尝试寻找销毁和重建组件，触发*componentDidMount** 方法,重置 state，然后才突然发现 key 这个属性已经在那里了。\n\n#####举个例子:\n\n我们有一个展示用户信息的**UserDashboard**组件。\n传给组件的**props**只有用户的 基本信息（ID，姓名等）,而有关用户的详细信息（比如当前是否在线等）是需要请求过来的。\n组件内的一些操作（比如尝试与该用户聊天）也会使用请求,组件本身也有各种状态（比如是否显示聊天框）。\n\n整个界面上最多只有一个**UserDashboard**,但某些操作（比如点击旁边的 UserList）可能会切换 UserDashboard 的目标用户。\n\n<span style=\"color:red\">那么问题就来了：</span>\n\n学挖掘机技术哪家强。。。。。咳咳咳串错场子了\n\n当目标用户切换的时候，UserDashboard 仅仅是一个普通的更新操作，触发的是 **componentWillReceiveProps**,**shouldComponentUpdate**,**componentWillUpdate**，**componentDidUpdate** 这一套方法。\n\n我们需要在 **componentWillReceiveProps** 中做太多的事情：\n\n- 检测这次 props 的更新是否改变了用户的 ID，如果是的话，我们需要检查 UserDashboard 发出去的请求是否都得到了响应，对还未收到响应的请求注销其响应函数（否则上一个用户的在线状态有可能显示在这一个用户上）；\n\n- 我们还要更新 UserDashboard 上的几乎所有状态（切换用户的时候总要把聊天框关闭吧）；\n\n如果我们还不幸地用的 ref 做了一些神奇的 hack，那么你还要去手动把之前做的事情复原回来，这简直要成一团乱麻了！\n当 UserDashborad 的逻辑，你的componentWillReceiveProps方法里会充斥着晦涩难懂的只有你能看懂的代码（两周后你自己也看不懂了）。\n\n<span style=\"color:red\">解决方案是什么？</span>\n\n就是用 key 属性。在 JSX 中使用UserDashboard的时候，不仅把userInfo传入，把 userInfo.id 作为名为 key 的 props 传入（尽管 UserDashboard 不是数组中的组件）。\n\n这样切换目标用户的时候，key 属性也变了，React 会自动销毁之前的组件，用一个全新的组件来渲染新的用户：\n\n我们可以从容地在**componentWillUnmount**里作清理工作（注销请求的响应函数，防止其更新一个 unmounted component），至于重置 state 这些工作已经不需要做了，由于组件不再是更新，而是销毁和重建，已经是天然完成的。\n\n当然，你可以质疑这样做是否会影响性能。\n我认为，只要目标用户的切换不够频繁，对性能的影响是很小的。\n如果不使用 key 触发组件的销毁和重建，任由组件自行[更新],每次切换时更新的内容也是很多的。\n\n这时，我们使用 key 带来的性能损耗是完全可以接受的，而带来的收益却非常大。\n\n所以，我想说的结论是：为了组件内部逻辑的清晰，你几乎应该在任何复杂的有状态组件（尤其是有具体对应对象的）上使用key属性（只要 key 属性的改变不是很频繁），这样做，才能在合适的时候触发组件的销毁与重建，组件才能有一个健康的**生命周期**。\n\n#####又是一个题外话\n\n配合 react-router 时，通常要为 route 组件赋 key，但通常情况下我们是没法传 props 给 route 组件的。\n\n解决的方案是 createElement 方法，如下所示。\n\n```javascript\nclass App extends Component {\n static createElement = (Component, ownProps) => {\n   const {userId} = ownProps.params;\n    switch (Component) {\n     case UserDashboard:\n      return <Component key={userId} {...ownProps}/>;\n      default:\n       return <Component {...ownProps}/>;\n    }\n  };\n  render() {\n\treturn (\n\t <Provider store={store}>\n\t  <Router createElement={App.createElement}\n\t\thistory={syncHistoryWithStore(hashHistory, store)}>\n\t\t <Route path=\"/\" component={Home}>\n\t\t  <IndexRoute component={Index}/>\n\t\t\t<Route path=\"users/:userId\" \n\t\t\t\tcomponent={UserDashboard}/>\n\t\t\t</Route>\n\t\t</Router>\n\t</Provider>\n\t)\n  }\n}\n```\n#####欢迎你的加入！\n<font style='color:green;font-weight:bold'>公众号：Domeday</font>\n推送时间为：\n>AM 7：00 ~ AM 8：30 \n>PM 9：30 ~ PM 11：00\n\n<span style='color:#B2B2B2'>在互联网这个行业，技术的更新迭代速度很快，唯有不断学习和尝试，我们才能立于不败之地，人都是做自己原本不能胜任的事情中，才能快速成长。所以，不要让任何事情成为你不去学习的理由！，你学过的每一样东西，都会在你一生的某个时候派上用场的。\n</span>\n\n\n```javascript\n\tGitHub=> React Native BBS 组件已更新\n```","source":"_posts/ReactJS 实践心得 key 属性的原理和用法.md","raw":"---\ntitle: ReactJS 实践心得 key 属性的原理和用法\n---\n\n####ReactJS && ReactNative ：\n>本章主要讲解key属性的原理和用法\n\n<!-- More -->\n\n#####首先你需要知道：\n\n<span style=\"color:#188eee;font-weight:bold\">React与ReactJS && React Native</span>\n\n>**React**是由**ReactJS**与**React Native**组成\n\n>其中**ReactJS**是Facebook开源的一个前端框架\n\n>**React Native**是**ReactJS**思想在*native*上的体现！\n\n<span style=\"color:red\">既然学过React Native，那你么reactJS呢？</span>\n\n>这已经是一个非常流行的框架，其实作为react-native入门，了解一些就够用了。 \n\n<span style=\"color:red\">那么JSX呢？</span>\n\n**JSX并不是一门新的语言，仅仅是个语法糖**，允许开发者在JavaScript中书写HTML语法。\n最后**每个HTML标签都转化为JavaScript代码来运行**。\n\n<span style=\"color:#188eee;font-weight:bold\">Start 今天的正题</span>\n\n我们知道，React 元素可以具有一个特殊的属性 key，这个属性不是给用户自己用的，而是给 React 自己用的。\n\n如果我们动态地创建 React 元素，而且 React 元素内包含数量或顺序不确定的子元素时，我们就需要提供 key 这个特殊的属性。\n\n如果你有下面这样的代码：\n```javascript\nconst UserList = props => (\n <div>\n  <h3>用户列表</h3>\n  {props.users.map(\n\tu => <div>{u.id}:{u.name}</div>)\n  }  \n\t// 没有提供 key\n </div>\n)\n```\nReact 会在控制台打印出报警信息：\n<span style=\"color:red\">\n```\nWarning: Each child in an array or iterator should have a unique \"key\" prop. Check the render method of `App`. See https://fb.me/react-warning-keys for more information.\n```\n</span>\n你必须为数组中的元素提供唯一的 key 属性，就像下面这样：\n```javascript\nconst UserList = props => (\n\t  <div>\n\t    <h3>用户列表</h3>\n\t   {props.users.map(u => <div key={u.id}>{u.id}:{u.name}</div>)}  \n\t\t// 提供了 key\n\t  </div>\n)\n```\n#####为什么呢？\n\n我们知道当组件的属性发生了变化，其 render 方法会被重新调用，组件会被重新渲染.\n#####比如: \n\nUserList组件的users属性改变了，就得重新渲染UserList组件，\n包括外部的`<div>`（容器），内部的一个`<h3>`和若干个`<div>`（每一个描述一个用户）。\n\n对后一种 `<div>`（表示用户的），由于其处在一个长度不确定的数组中，\nReact 需要判断，对数组中的每一项，到底是新建一个元素加入到页面中，还是更新原来的元素。\n\n#####比如以下几种情况：\n\n\t[{name: '张三', age: 20}] => [{name: '张三', age: 21}]\n>这种情况明显只需要更新元素，没有必要重新创建元素。\n\n因为人还是那个人，除了 age，其他信息没有变，显示用户姓名的那个（更小的）元素，是不需要更新（被 ReactDOM 操作到）的。\n\n\t[{name: '张三'}] => [{name: '张三'}, {name: '李四'}] \n>这种情况，显然需要添加一个新元素来表示李四，这个新元素对应的 DOM 元素会被插入到页面中。\n\n\t[{name: '张三'}] => [{name: '李四'}]\n>这种情况就有点复杂了，似乎两种方案都可以。\n>可以把表示张三的元素删掉，为李四新建一个，当然是非常合理的选择。\n>但是直接把张三的元素换成李四，似乎也无不可。\n\n实际上，如果真的认为上述第3种的后一种方案也无不可，那可是大错特错了。为什么呢：\n考虑这种情况：\n\n\t[{name: '张三'}, {name: '李四'}] => [{name: '李四'}, {name: '张三'}]\n\n<span style=\"color:red\">难道也需要把张三的元素更新成李四的，李四的元素更新成张三的吗？</span>\n\n那么，为数组中的元素传一个唯一的 key（比如用户的 ID），就很好地解决了这个问题。\n\nReact 比较更新前后的元素 key 值，如果相同则更新，如果不同则销毁之前的，重新创建一个元素。\n\n<span style=\"color:red\">那么，为什么只有数组中的元素需要有唯一的 key，而其他的元素（比如上面的`<h3>`用户列表`</h3>`）则不需要呢？</span>\n\n>答案是：React 有能力辨别出，更新前后元素的对应关系。\n\n这一点，也许直接看 JSX 不够明显，看 Babel 转换后的 React.createElement 则清晰很多：\n>转换前:\n\n```javascript\nconst element = (\n  <div>\n    <h3>example</h3>\n    {[<p key={1}>hello</p>, <p key={2}>world</p>]}\n  </div>\n)\n```\n>转换后\n\n```javascript\n\"use strict\";\nvar element = React.createElement(\n  \"div\",\n  null,\n  React.createElement(\"h3\",null,\"example\"),\n  [\n    React.createElement(\"p\",{ key: 1 },\"hello\"), \n    React.createElement(\"p\",{ key: 2 },\"world\")\n  ]\n)\n```\n不管 props 如何变化，数组外的每个元素始终出现在 React.createElement() 参数列表中的固定位置，这个位置就是天然的 key。\n\n#####题外话:\n\n初学 React 时还容易产生另一个困惑;\n\n<span style=\"color:red\">那就是为什么 JSX 不支持 if 表达式来有选择地输出</span>\n例如：\n\n\t{if(yes){ <div {...props}/>}})\n\n而必须采用三元运算符来完成这项工作\n必须这样：\n\n\t{yes ? <div {...props}/>} : null)\n\n那是因为，React 需要一个 null 去占住那个元素本来的位置。\n\n#####吐个槽：\n\n曾经，我天真的以为 key 这个元素只应在数组中使用,直到我在一个复杂的项目中写出了及其恶心的 **componentWillReceiveProps**方法。我尝试寻找销毁和重建组件，触发*componentDidMount** 方法,重置 state，然后才突然发现 key 这个属性已经在那里了。\n\n#####举个例子:\n\n我们有一个展示用户信息的**UserDashboard**组件。\n传给组件的**props**只有用户的 基本信息（ID，姓名等）,而有关用户的详细信息（比如当前是否在线等）是需要请求过来的。\n组件内的一些操作（比如尝试与该用户聊天）也会使用请求,组件本身也有各种状态（比如是否显示聊天框）。\n\n整个界面上最多只有一个**UserDashboard**,但某些操作（比如点击旁边的 UserList）可能会切换 UserDashboard 的目标用户。\n\n<span style=\"color:red\">那么问题就来了：</span>\n\n学挖掘机技术哪家强。。。。。咳咳咳串错场子了\n\n当目标用户切换的时候，UserDashboard 仅仅是一个普通的更新操作，触发的是 **componentWillReceiveProps**,**shouldComponentUpdate**,**componentWillUpdate**，**componentDidUpdate** 这一套方法。\n\n我们需要在 **componentWillReceiveProps** 中做太多的事情：\n\n- 检测这次 props 的更新是否改变了用户的 ID，如果是的话，我们需要检查 UserDashboard 发出去的请求是否都得到了响应，对还未收到响应的请求注销其响应函数（否则上一个用户的在线状态有可能显示在这一个用户上）；\n\n- 我们还要更新 UserDashboard 上的几乎所有状态（切换用户的时候总要把聊天框关闭吧）；\n\n如果我们还不幸地用的 ref 做了一些神奇的 hack，那么你还要去手动把之前做的事情复原回来，这简直要成一团乱麻了！\n当 UserDashborad 的逻辑，你的componentWillReceiveProps方法里会充斥着晦涩难懂的只有你能看懂的代码（两周后你自己也看不懂了）。\n\n<span style=\"color:red\">解决方案是什么？</span>\n\n就是用 key 属性。在 JSX 中使用UserDashboard的时候，不仅把userInfo传入，把 userInfo.id 作为名为 key 的 props 传入（尽管 UserDashboard 不是数组中的组件）。\n\n这样切换目标用户的时候，key 属性也变了，React 会自动销毁之前的组件，用一个全新的组件来渲染新的用户：\n\n我们可以从容地在**componentWillUnmount**里作清理工作（注销请求的响应函数，防止其更新一个 unmounted component），至于重置 state 这些工作已经不需要做了，由于组件不再是更新，而是销毁和重建，已经是天然完成的。\n\n当然，你可以质疑这样做是否会影响性能。\n我认为，只要目标用户的切换不够频繁，对性能的影响是很小的。\n如果不使用 key 触发组件的销毁和重建，任由组件自行[更新],每次切换时更新的内容也是很多的。\n\n这时，我们使用 key 带来的性能损耗是完全可以接受的，而带来的收益却非常大。\n\n所以，我想说的结论是：为了组件内部逻辑的清晰，你几乎应该在任何复杂的有状态组件（尤其是有具体对应对象的）上使用key属性（只要 key 属性的改变不是很频繁），这样做，才能在合适的时候触发组件的销毁与重建，组件才能有一个健康的**生命周期**。\n\n#####又是一个题外话\n\n配合 react-router 时，通常要为 route 组件赋 key，但通常情况下我们是没法传 props 给 route 组件的。\n\n解决的方案是 createElement 方法，如下所示。\n\n```javascript\nclass App extends Component {\n static createElement = (Component, ownProps) => {\n   const {userId} = ownProps.params;\n    switch (Component) {\n     case UserDashboard:\n      return <Component key={userId} {...ownProps}/>;\n      default:\n       return <Component {...ownProps}/>;\n    }\n  };\n  render() {\n\treturn (\n\t <Provider store={store}>\n\t  <Router createElement={App.createElement}\n\t\thistory={syncHistoryWithStore(hashHistory, store)}>\n\t\t <Route path=\"/\" component={Home}>\n\t\t  <IndexRoute component={Index}/>\n\t\t\t<Route path=\"users/:userId\" \n\t\t\t\tcomponent={UserDashboard}/>\n\t\t\t</Route>\n\t\t</Router>\n\t</Provider>\n\t)\n  }\n}\n```\n#####欢迎你的加入！\n<font style='color:green;font-weight:bold'>公众号：Domeday</font>\n推送时间为：\n>AM 7：00 ~ AM 8：30 \n>PM 9：30 ~ PM 11：00\n\n<span style='color:#B2B2B2'>在互联网这个行业，技术的更新迭代速度很快，唯有不断学习和尝试，我们才能立于不败之地，人都是做自己原本不能胜任的事情中，才能快速成长。所以，不要让任何事情成为你不去学习的理由！，你学过的每一样东西，都会在你一生的某个时候派上用场的。\n</span>\n\n\n```javascript\n\tGitHub=> React Native BBS 组件已更新\n```","slug":"ReactJS 实践心得 key 属性的原理和用法","published":1,"date":"2017-02-12T00:24:38.940Z","updated":"2016-12-02T04:21:14.000Z","_id":"ciz1xi7uz0000v8gb6zuperwx","comments":1,"layout":"post","photos":[],"link":"","content":"<p>####ReactJS &amp;&amp; ReactNative ：</p>\n<blockquote>\n<p>本章主要讲解key属性的原理和用法</p>\n</blockquote>\n<a id=\"more\"></a>\n<p>#####首先你需要知道：</p>\n<p><span style=\"color:#188eee;font-weight:bold\">React与ReactJS &amp;&amp; React Native</span></p>\n<blockquote>\n<p><strong>React</strong>是由<strong>ReactJS</strong>与<strong>React Native</strong>组成</p>\n<p>其中<strong>ReactJS</strong>是Facebook开源的一个前端框架</p>\n<p><strong>React Native</strong>是<strong>ReactJS</strong>思想在<em>native</em>上的体现！</p>\n</blockquote>\n<p><span style=\"color:red\">既然学过React Native，那你么reactJS呢？</span></p>\n<blockquote>\n<p>这已经是一个非常流行的框架，其实作为react-native入门，了解一些就够用了。 </p>\n</blockquote>\n<p><span style=\"color:red\">那么JSX呢？</span></p>\n<p><strong>JSX并不是一门新的语言，仅仅是个语法糖</strong>，允许开发者在JavaScript中书写HTML语法。<br>最后<strong>每个HTML标签都转化为JavaScript代码来运行</strong>。</p>\n<p><span style=\"color:#188eee;font-weight:bold\">Start 今天的正题</span></p>\n<p>我们知道，React 元素可以具有一个特殊的属性 key，这个属性不是给用户自己用的，而是给 React 自己用的。</p>\n<p>如果我们动态地创建 React 元素，而且 React 元素内包含数量或顺序不确定的子元素时，我们就需要提供 key 这个特殊的属性。</p>\n<p>如果你有下面这样的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> UserList = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> (</div><div class=\"line\"> &lt;div&gt;</div><div class=\"line\">  &lt;h3&gt;用户列表&lt;/h3&gt;</div><div class=\"line\">  &#123;props.users.map(</div><div class=\"line\">\tu =&gt; &lt;div&gt;&#123;u.id&#125;:&#123;u.name&#125;&lt;/div&gt;)</div><div class=\"line\">  &#125;  </div><div class=\"line\">\t// 没有提供 key</div><div class=\"line\"> &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>React 会在控制台打印出报警信息：<br><span style=\"color:red\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: Each child in an array or iterator should have a unique &quot;key&quot; prop. Check the render method of `App`. See https://fb.me/react-warning-keys for more information.</div></pre></td></tr></table></figure></span></p>\n<p><br>你必须为数组中的元素提供唯一的 key 属性，就像下面这样：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> UserList = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> (</div><div class=\"line\">\t  &lt;div&gt;</div><div class=\"line\">\t    &lt;h3&gt;用户列表&lt;/h3&gt;</div><div class=\"line\">\t   &#123;props.users.map(u =&gt; &lt;div key=&#123;u.id&#125;&gt;&#123;u.id&#125;:&#123;u.name&#125;&lt;/div&gt;)&#125;  </div><div class=\"line\">\t\t// 提供了 key</div><div class=\"line\">\t  &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>#####为什么呢？</p>\n<p>我们知道当组件的属性发生了变化，其 render 方法会被重新调用，组件会被重新渲染.</p>\n<p>#####比如: </p>\n<p>UserList组件的users属性改变了，就得重新渲染UserList组件，<br>包括外部的<code>&lt;div&gt;</code>（容器），内部的一个<code>&lt;h3&gt;</code>和若干个<code>&lt;div&gt;</code>（每一个描述一个用户）。</p>\n<p>对后一种 <code>&lt;div&gt;</code>（表示用户的），由于其处在一个长度不确定的数组中，<br>React 需要判断，对数组中的每一项，到底是新建一个元素加入到页面中，还是更新原来的元素。</p>\n<p>#####比如以下几种情况：</p>\n<pre><code>[{name: &apos;张三&apos;, age: 20}] =&gt; [{name: &apos;张三&apos;, age: 21}]\n</code></pre><blockquote>\n<p>这种情况明显只需要更新元素，没有必要重新创建元素。</p>\n</blockquote>\n<p>因为人还是那个人，除了 age，其他信息没有变，显示用户姓名的那个（更小的）元素，是不需要更新（被 ReactDOM 操作到）的。</p>\n<pre><code>[{name: &apos;张三&apos;}] =&gt; [{name: &apos;张三&apos;}, {name: &apos;李四&apos;}] \n</code></pre><blockquote>\n<p>这种情况，显然需要添加一个新元素来表示李四，这个新元素对应的 DOM 元素会被插入到页面中。</p>\n</blockquote>\n<pre><code>[{name: &apos;张三&apos;}] =&gt; [{name: &apos;李四&apos;}]\n</code></pre><blockquote>\n<p>这种情况就有点复杂了，似乎两种方案都可以。<br>可以把表示张三的元素删掉，为李四新建一个，当然是非常合理的选择。<br>但是直接把张三的元素换成李四，似乎也无不可。</p>\n</blockquote>\n<p>实际上，如果真的认为上述第3种的后一种方案也无不可，那可是大错特错了。为什么呢：<br>考虑这种情况：</p>\n<pre><code>[{name: &apos;张三&apos;}, {name: &apos;李四&apos;}] =&gt; [{name: &apos;李四&apos;}, {name: &apos;张三&apos;}]\n</code></pre><p><span style=\"color:red\">难道也需要把张三的元素更新成李四的，李四的元素更新成张三的吗？</span></p>\n<p>那么，为数组中的元素传一个唯一的 key（比如用户的 ID），就很好地解决了这个问题。</p>\n<p>React 比较更新前后的元素 key 值，如果相同则更新，如果不同则销毁之前的，重新创建一个元素。</p>\n<p><span style=\"color:red\">那么，为什么只有数组中的元素需要有唯一的 key，而其他的元素（比如上面的<code>&lt;h3&gt;</code>用户列表<code>&lt;/h3&gt;</code>）则不需要呢？</span></p>\n<blockquote>\n<p>答案是：React 有能力辨别出，更新前后元素的对应关系。</p>\n</blockquote>\n<p>这一点，也许直接看 JSX 不够明显，看 Babel 转换后的 React.createElement 则清晰很多：</p>\n<blockquote>\n<p>转换前:</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> element = (</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h3&gt;example&lt;/h3&gt;</div><div class=\"line\">    &#123;[&lt;p key=&#123;1&#125;&gt;hello&lt;/p&gt;, &lt;p key=&#123;2&#125;&gt;world&lt;/p&gt;]&#125;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>转换后</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">\"use strict\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> element = React.createElement(</div><div class=\"line\">  <span class=\"string\">\"div\"</span>,</div><div class=\"line\">  <span class=\"literal\">null</span>,</div><div class=\"line\">  React.createElement(<span class=\"string\">\"h3\"</span>,<span class=\"literal\">null</span>,<span class=\"string\">\"example\"</span>),</div><div class=\"line\">  [</div><div class=\"line\">    React.createElement(<span class=\"string\">\"p\"</span>,&#123; <span class=\"attr\">key</span>: <span class=\"number\">1</span> &#125;,<span class=\"string\">\"hello\"</span>), </div><div class=\"line\">    React.createElement(<span class=\"string\">\"p\"</span>,&#123; <span class=\"attr\">key</span>: <span class=\"number\">2</span> &#125;,<span class=\"string\">\"world\"</span>)</div><div class=\"line\">  ]</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>不管 props 如何变化，数组外的每个元素始终出现在 React.createElement() 参数列表中的固定位置，这个位置就是天然的 key。</p>\n<p>#####题外话:</p>\n<p>初学 React 时还容易产生另一个困惑;</p>\n<p><span style=\"color:red\">那就是为什么 JSX 不支持 if 表达式来有选择地输出</span><br>例如：</p>\n<pre><code>{if(yes){ &lt;div {...props}/&gt;}})\n</code></pre><p>而必须采用三元运算符来完成这项工作<br>必须这样：</p>\n<pre><code>{yes ? &lt;div {...props}/&gt;} : null)\n</code></pre><p>那是因为，React 需要一个 null 去占住那个元素本来的位置。</p>\n<p>#####吐个槽：</p>\n<p>曾经，我天真的以为 key 这个元素只应在数组中使用,直到我在一个复杂的项目中写出了及其恶心的 <strong>componentWillReceiveProps</strong>方法。我尝试寻找销毁和重建组件，触发<em>componentDidMount*</em> 方法,重置 state，然后才突然发现 key 这个属性已经在那里了。</p>\n<p>#####举个例子:</p>\n<p>我们有一个展示用户信息的<strong>UserDashboard</strong>组件。<br>传给组件的<strong>props</strong>只有用户的 基本信息（ID，姓名等）,而有关用户的详细信息（比如当前是否在线等）是需要请求过来的。<br>组件内的一些操作（比如尝试与该用户聊天）也会使用请求,组件本身也有各种状态（比如是否显示聊天框）。</p>\n<p>整个界面上最多只有一个<strong>UserDashboard</strong>,但某些操作（比如点击旁边的 UserList）可能会切换 UserDashboard 的目标用户。</p>\n<p><span style=\"color:red\">那么问题就来了：</span></p>\n<p>学挖掘机技术哪家强。。。。。咳咳咳串错场子了</p>\n<p>当目标用户切换的时候，UserDashboard 仅仅是一个普通的更新操作，触发的是 <strong>componentWillReceiveProps</strong>,<strong>shouldComponentUpdate</strong>,<strong>componentWillUpdate</strong>，<strong>componentDidUpdate</strong> 这一套方法。</p>\n<p>我们需要在 <strong>componentWillReceiveProps</strong> 中做太多的事情：</p>\n<ul>\n<li><p>检测这次 props 的更新是否改变了用户的 ID，如果是的话，我们需要检查 UserDashboard 发出去的请求是否都得到了响应，对还未收到响应的请求注销其响应函数（否则上一个用户的在线状态有可能显示在这一个用户上）；</p>\n</li>\n<li><p>我们还要更新 UserDashboard 上的几乎所有状态（切换用户的时候总要把聊天框关闭吧）；</p>\n</li>\n</ul>\n<p>如果我们还不幸地用的 ref 做了一些神奇的 hack，那么你还要去手动把之前做的事情复原回来，这简直要成一团乱麻了！<br>当 UserDashborad 的逻辑，你的componentWillReceiveProps方法里会充斥着晦涩难懂的只有你能看懂的代码（两周后你自己也看不懂了）。</p>\n<p><span style=\"color:red\">解决方案是什么？</span></p>\n<p>就是用 key 属性。在 JSX 中使用UserDashboard的时候，不仅把userInfo传入，把 userInfo.id 作为名为 key 的 props 传入（尽管 UserDashboard 不是数组中的组件）。</p>\n<p>这样切换目标用户的时候，key 属性也变了，React 会自动销毁之前的组件，用一个全新的组件来渲染新的用户：</p>\n<p>我们可以从容地在<strong>componentWillUnmount</strong>里作清理工作（注销请求的响应函数，防止其更新一个 unmounted component），至于重置 state 这些工作已经不需要做了，由于组件不再是更新，而是销毁和重建，已经是天然完成的。</p>\n<p>当然，你可以质疑这样做是否会影响性能。<br>我认为，只要目标用户的切换不够频繁，对性能的影响是很小的。<br>如果不使用 key 触发组件的销毁和重建，任由组件自行[更新],每次切换时更新的内容也是很多的。</p>\n<p>这时，我们使用 key 带来的性能损耗是完全可以接受的，而带来的收益却非常大。</p>\n<p>所以，我想说的结论是：为了组件内部逻辑的清晰，你几乎应该在任何复杂的有状态组件（尤其是有具体对应对象的）上使用key属性（只要 key 属性的改变不是很频繁），这样做，才能在合适的时候触发组件的销毁与重建，组件才能有一个健康的<strong>生命周期</strong>。</p>\n<p>#####又是一个题外话</p>\n<p>配合 react-router 时，通常要为 route 组件赋 key，但通常情况下我们是没法传 props 给 route 组件的。</p>\n<p>解决的方案是 createElement 方法，如下所示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">static</span> createElement = <span class=\"function\">(<span class=\"params\">Component, ownProps</span>) =&gt;</span> &#123;</div><div class=\"line\">   <span class=\"keyword\">const</span> &#123;userId&#125; = ownProps.params;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (Component) &#123;</div><div class=\"line\">     <span class=\"keyword\">case</span> UserDashboard:</div><div class=\"line\">      <span class=\"keyword\">return</span> &lt;Component key=&#123;userId&#125; &#123;...ownProps&#125;/&gt;;</div><div class=\"line\">      default:</div><div class=\"line\">       return &lt;Component &#123;...ownProps&#125;/&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">\treturn (</div><div class=\"line\">\t &lt;Provider store=&#123;store&#125;&gt;</div><div class=\"line\">\t  &lt;Router createElement=&#123;App.createElement&#125;</div><div class=\"line\">\t\thistory=&#123;syncHistoryWithStore(hashHistory, store)&#125;&gt;</div><div class=\"line\">\t\t &lt;Route path=\"/\" component=&#123;Home&#125;&gt;</div><div class=\"line\">\t\t  &lt;IndexRoute component=&#123;Index&#125;/&gt;</div><div class=\"line\">\t\t\t&lt;Route path=\"users/:userId\" </div><div class=\"line\">\t\t\t\tcomponent=&#123;UserDashboard&#125;/&gt;</div><div class=\"line\">\t\t\t&lt;/Route&gt;</div><div class=\"line\">\t\t&lt;/Router&gt;</div><div class=\"line\">\t&lt;/Provider&gt;</div><div class=\"line\">\t)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>#####欢迎你的加入！</p>\n<p><font style=\"color:green;font-weight:bold\">公众号：Domeday</font><br>推送时间为：</p>\n<blockquote>\n<p>AM 7：00 ~ AM 8：30<br>PM 9：30 ~ PM 11：00</p>\n</blockquote>\n<p><span style=\"color:#B2B2B2\">在互联网这个行业，技术的更新迭代速度很快，唯有不断学习和尝试，我们才能立于不败之地，人都是做自己原本不能胜任的事情中，才能快速成长。所以，不要让任何事情成为你不去学习的理由！，你学过的每一样东西，都会在你一生的某个时候派上用场的。<br></span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">GitHub=&gt; React Native BBS 组件已更新</div></pre></td></tr></table></figure>","excerpt":"<p>####ReactJS &amp;&amp; ReactNative ：</p>\n<blockquote>\n<p>本章主要讲解key属性的原理和用法</p>\n</blockquote>","more":"<p>#####首先你需要知道：</p>\n<p><span style=\"color:#188eee;font-weight:bold\">React与ReactJS &amp;&amp; React Native</span></p>\n<blockquote>\n<p><strong>React</strong>是由<strong>ReactJS</strong>与<strong>React Native</strong>组成</p>\n<p>其中<strong>ReactJS</strong>是Facebook开源的一个前端框架</p>\n<p><strong>React Native</strong>是<strong>ReactJS</strong>思想在<em>native</em>上的体现！</p>\n</blockquote>\n<p><span style=\"color:red\">既然学过React Native，那你么reactJS呢？</span></p>\n<blockquote>\n<p>这已经是一个非常流行的框架，其实作为react-native入门，了解一些就够用了。 </p>\n</blockquote>\n<p><span style=\"color:red\">那么JSX呢？</span></p>\n<p><strong>JSX并不是一门新的语言，仅仅是个语法糖</strong>，允许开发者在JavaScript中书写HTML语法。<br>最后<strong>每个HTML标签都转化为JavaScript代码来运行</strong>。</p>\n<p><span style=\"color:#188eee;font-weight:bold\">Start 今天的正题</span></p>\n<p>我们知道，React 元素可以具有一个特殊的属性 key，这个属性不是给用户自己用的，而是给 React 自己用的。</p>\n<p>如果我们动态地创建 React 元素，而且 React 元素内包含数量或顺序不确定的子元素时，我们就需要提供 key 这个特殊的属性。</p>\n<p>如果你有下面这样的代码：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> UserList = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> (</div><div class=\"line\"> &lt;div&gt;</div><div class=\"line\">  &lt;h3&gt;用户列表&lt;/h3&gt;</div><div class=\"line\">  &#123;props.users.map(</div><div class=\"line\">\tu =&gt; &lt;div&gt;&#123;u.id&#125;:&#123;u.name&#125;&lt;/div&gt;)</div><div class=\"line\">  &#125;  </div><div class=\"line\">\t// 没有提供 key</div><div class=\"line\"> &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>React 会在控制台打印出报警信息：<br><span style=\"color:red\"><br><figure class=\"highlight plain\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">Warning: Each child in an array or iterator should have a unique &quot;key&quot; prop. Check the render method of `App`. See https://fb.me/react-warning-keys for more information.</div></pre></td></tr></table></figure></p>\n<p></span><br>你必须为数组中的元素提供唯一的 key 属性，就像下面这样：<br><figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> UserList = <span class=\"function\"><span class=\"params\">props</span> =&gt;</span> (</div><div class=\"line\">\t  &lt;div&gt;</div><div class=\"line\">\t    &lt;h3&gt;用户列表&lt;/h3&gt;</div><div class=\"line\">\t   &#123;props.users.map(u =&gt; &lt;div key=&#123;u.id&#125;&gt;&#123;u.id&#125;:&#123;u.name&#125;&lt;/div&gt;)&#125;  </div><div class=\"line\">\t\t// 提供了 key</div><div class=\"line\">\t  &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure></p>\n<p>#####为什么呢？</p>\n<p>我们知道当组件的属性发生了变化，其 render 方法会被重新调用，组件会被重新渲染.</p>\n<p>#####比如: </p>\n<p>UserList组件的users属性改变了，就得重新渲染UserList组件，<br>包括外部的<code>&lt;div&gt;</code>（容器），内部的一个<code>&lt;h3&gt;</code>和若干个<code>&lt;div&gt;</code>（每一个描述一个用户）。</p>\n<p>对后一种 <code>&lt;div&gt;</code>（表示用户的），由于其处在一个长度不确定的数组中，<br>React 需要判断，对数组中的每一项，到底是新建一个元素加入到页面中，还是更新原来的元素。</p>\n<p>#####比如以下几种情况：</p>\n<pre><code>[{name: &apos;张三&apos;, age: 20}] =&gt; [{name: &apos;张三&apos;, age: 21}]\n</code></pre><blockquote>\n<p>这种情况明显只需要更新元素，没有必要重新创建元素。</p>\n</blockquote>\n<p>因为人还是那个人，除了 age，其他信息没有变，显示用户姓名的那个（更小的）元素，是不需要更新（被 ReactDOM 操作到）的。</p>\n<pre><code>[{name: &apos;张三&apos;}] =&gt; [{name: &apos;张三&apos;}, {name: &apos;李四&apos;}] \n</code></pre><blockquote>\n<p>这种情况，显然需要添加一个新元素来表示李四，这个新元素对应的 DOM 元素会被插入到页面中。</p>\n</blockquote>\n<pre><code>[{name: &apos;张三&apos;}] =&gt; [{name: &apos;李四&apos;}]\n</code></pre><blockquote>\n<p>这种情况就有点复杂了，似乎两种方案都可以。<br>可以把表示张三的元素删掉，为李四新建一个，当然是非常合理的选择。<br>但是直接把张三的元素换成李四，似乎也无不可。</p>\n</blockquote>\n<p>实际上，如果真的认为上述第3种的后一种方案也无不可，那可是大错特错了。为什么呢：<br>考虑这种情况：</p>\n<pre><code>[{name: &apos;张三&apos;}, {name: &apos;李四&apos;}] =&gt; [{name: &apos;李四&apos;}, {name: &apos;张三&apos;}]\n</code></pre><p><span style=\"color:red\">难道也需要把张三的元素更新成李四的，李四的元素更新成张三的吗？</span></p>\n<p>那么，为数组中的元素传一个唯一的 key（比如用户的 ID），就很好地解决了这个问题。</p>\n<p>React 比较更新前后的元素 key 值，如果相同则更新，如果不同则销毁之前的，重新创建一个元素。</p>\n<p><span style=\"color:red\">那么，为什么只有数组中的元素需要有唯一的 key，而其他的元素（比如上面的<code>&lt;h3&gt;</code>用户列表<code>&lt;/h3&gt;</code>）则不需要呢？</span></p>\n<blockquote>\n<p>答案是：React 有能力辨别出，更新前后元素的对应关系。</p>\n</blockquote>\n<p>这一点，也许直接看 JSX 不够明显，看 Babel 转换后的 React.createElement 则清晰很多：</p>\n<blockquote>\n<p>转换前:</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"keyword\">const</span> element = (</div><div class=\"line\">  &lt;div&gt;</div><div class=\"line\">    &lt;h3&gt;example&lt;/h3&gt;</div><div class=\"line\">    &#123;[&lt;p key=&#123;1&#125;&gt;hello&lt;/p&gt;, &lt;p key=&#123;2&#125;&gt;world&lt;/p&gt;]&#125;</div><div class=\"line\">  &lt;/div&gt;</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<blockquote>\n<p>转换后</p>\n</blockquote>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"meta\">\"use strict\"</span>;</div><div class=\"line\"><span class=\"keyword\">var</span> element = React.createElement(</div><div class=\"line\">  <span class=\"string\">\"div\"</span>,</div><div class=\"line\">  <span class=\"literal\">null</span>,</div><div class=\"line\">  React.createElement(<span class=\"string\">\"h3\"</span>,<span class=\"literal\">null</span>,<span class=\"string\">\"example\"</span>),</div><div class=\"line\">  [</div><div class=\"line\">    React.createElement(<span class=\"string\">\"p\"</span>,&#123; <span class=\"attr\">key</span>: <span class=\"number\">1</span> &#125;,<span class=\"string\">\"hello\"</span>), </div><div class=\"line\">    React.createElement(<span class=\"string\">\"p\"</span>,&#123; <span class=\"attr\">key</span>: <span class=\"number\">2</span> &#125;,<span class=\"string\">\"world\"</span>)</div><div class=\"line\">  ]</div><div class=\"line\">)</div></pre></td></tr></table></figure>\n<p>不管 props 如何变化，数组外的每个元素始终出现在 React.createElement() 参数列表中的固定位置，这个位置就是天然的 key。</p>\n<p>#####题外话:</p>\n<p>初学 React 时还容易产生另一个困惑;</p>\n<p><span style=\"color:red\">那就是为什么 JSX 不支持 if 表达式来有选择地输出</span><br>例如：</p>\n<pre><code>{if(yes){ &lt;div {...props}/&gt;}})\n</code></pre><p>而必须采用三元运算符来完成这项工作<br>必须这样：</p>\n<pre><code>{yes ? &lt;div {...props}/&gt;} : null)\n</code></pre><p>那是因为，React 需要一个 null 去占住那个元素本来的位置。</p>\n<p>#####吐个槽：</p>\n<p>曾经，我天真的以为 key 这个元素只应在数组中使用,直到我在一个复杂的项目中写出了及其恶心的 <strong>componentWillReceiveProps</strong>方法。我尝试寻找销毁和重建组件，触发<em>componentDidMount*</em> 方法,重置 state，然后才突然发现 key 这个属性已经在那里了。</p>\n<p>#####举个例子:</p>\n<p>我们有一个展示用户信息的<strong>UserDashboard</strong>组件。<br>传给组件的<strong>props</strong>只有用户的 基本信息（ID，姓名等）,而有关用户的详细信息（比如当前是否在线等）是需要请求过来的。<br>组件内的一些操作（比如尝试与该用户聊天）也会使用请求,组件本身也有各种状态（比如是否显示聊天框）。</p>\n<p>整个界面上最多只有一个<strong>UserDashboard</strong>,但某些操作（比如点击旁边的 UserList）可能会切换 UserDashboard 的目标用户。</p>\n<p><span style=\"color:red\">那么问题就来了：</span></p>\n<p>学挖掘机技术哪家强。。。。。咳咳咳串错场子了</p>\n<p>当目标用户切换的时候，UserDashboard 仅仅是一个普通的更新操作，触发的是 <strong>componentWillReceiveProps</strong>,<strong>shouldComponentUpdate</strong>,<strong>componentWillUpdate</strong>，<strong>componentDidUpdate</strong> 这一套方法。</p>\n<p>我们需要在 <strong>componentWillReceiveProps</strong> 中做太多的事情：</p>\n<ul>\n<li><p>检测这次 props 的更新是否改变了用户的 ID，如果是的话，我们需要检查 UserDashboard 发出去的请求是否都得到了响应，对还未收到响应的请求注销其响应函数（否则上一个用户的在线状态有可能显示在这一个用户上）；</p>\n</li>\n<li><p>我们还要更新 UserDashboard 上的几乎所有状态（切换用户的时候总要把聊天框关闭吧）；</p>\n</li>\n</ul>\n<p>如果我们还不幸地用的 ref 做了一些神奇的 hack，那么你还要去手动把之前做的事情复原回来，这简直要成一团乱麻了！<br>当 UserDashborad 的逻辑，你的componentWillReceiveProps方法里会充斥着晦涩难懂的只有你能看懂的代码（两周后你自己也看不懂了）。</p>\n<p><span style=\"color:red\">解决方案是什么？</span></p>\n<p>就是用 key 属性。在 JSX 中使用UserDashboard的时候，不仅把userInfo传入，把 userInfo.id 作为名为 key 的 props 传入（尽管 UserDashboard 不是数组中的组件）。</p>\n<p>这样切换目标用户的时候，key 属性也变了，React 会自动销毁之前的组件，用一个全新的组件来渲染新的用户：</p>\n<p>我们可以从容地在<strong>componentWillUnmount</strong>里作清理工作（注销请求的响应函数，防止其更新一个 unmounted component），至于重置 state 这些工作已经不需要做了，由于组件不再是更新，而是销毁和重建，已经是天然完成的。</p>\n<p>当然，你可以质疑这样做是否会影响性能。<br>我认为，只要目标用户的切换不够频繁，对性能的影响是很小的。<br>如果不使用 key 触发组件的销毁和重建，任由组件自行[更新],每次切换时更新的内容也是很多的。</p>\n<p>这时，我们使用 key 带来的性能损耗是完全可以接受的，而带来的收益却非常大。</p>\n<p>所以，我想说的结论是：为了组件内部逻辑的清晰，你几乎应该在任何复杂的有状态组件（尤其是有具体对应对象的）上使用key属性（只要 key 属性的改变不是很频繁），这样做，才能在合适的时候触发组件的销毁与重建，组件才能有一个健康的<strong>生命周期</strong>。</p>\n<p>#####又是一个题外话</p>\n<p>配合 react-router 时，通常要为 route 组件赋 key，但通常情况下我们是没法传 props 给 route 组件的。</p>\n<p>解决的方案是 createElement 方法，如下所示。</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div><div class=\"line\">2</div><div class=\"line\">3</div><div class=\"line\">4</div><div class=\"line\">5</div><div class=\"line\">6</div><div class=\"line\">7</div><div class=\"line\">8</div><div class=\"line\">9</div><div class=\"line\">10</div><div class=\"line\">11</div><div class=\"line\">12</div><div class=\"line\">13</div><div class=\"line\">14</div><div class=\"line\">15</div><div class=\"line\">16</div><div class=\"line\">17</div><div class=\"line\">18</div><div class=\"line\">19</div><div class=\"line\">20</div><div class=\"line\">21</div><div class=\"line\">22</div><div class=\"line\">23</div><div class=\"line\">24</div><div class=\"line\">25</div></pre></td><td class=\"code\"><pre><div class=\"line\"><span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">App</span> <span class=\"keyword\">extends</span> <span class=\"title\">Component</span> </span>&#123;</div><div class=\"line\"> <span class=\"keyword\">static</span> createElement = <span class=\"function\">(<span class=\"params\">Component, ownProps</span>) =&gt;</span> &#123;</div><div class=\"line\">   <span class=\"keyword\">const</span> &#123;userId&#125; = ownProps.params;</div><div class=\"line\">    <span class=\"keyword\">switch</span> (Component) &#123;</div><div class=\"line\">     <span class=\"keyword\">case</span> UserDashboard:</div><div class=\"line\">      <span class=\"keyword\">return</span> &lt;Component key=&#123;userId&#125; &#123;...ownProps&#125;/&gt;;</div><div class=\"line\">      default:</div><div class=\"line\">       return &lt;Component &#123;...ownProps&#125;/&gt;;</div><div class=\"line\">    &#125;</div><div class=\"line\">  &#125;;</div><div class=\"line\">  render() &#123;</div><div class=\"line\">\treturn (</div><div class=\"line\">\t &lt;Provider store=&#123;store&#125;&gt;</div><div class=\"line\">\t  &lt;Router createElement=&#123;App.createElement&#125;</div><div class=\"line\">\t\thistory=&#123;syncHistoryWithStore(hashHistory, store)&#125;&gt;</div><div class=\"line\">\t\t &lt;Route path=\"/\" component=&#123;Home&#125;&gt;</div><div class=\"line\">\t\t  &lt;IndexRoute component=&#123;Index&#125;/&gt;</div><div class=\"line\">\t\t\t&lt;Route path=\"users/:userId\" </div><div class=\"line\">\t\t\t\tcomponent=&#123;UserDashboard&#125;/&gt;</div><div class=\"line\">\t\t\t&lt;/Route&gt;</div><div class=\"line\">\t\t&lt;/Router&gt;</div><div class=\"line\">\t&lt;/Provider&gt;</div><div class=\"line\">\t)</div><div class=\"line\">  &#125;</div><div class=\"line\">&#125;</div></pre></td></tr></table></figure>\n<p>#####欢迎你的加入！</p>\n<p><font style='color:green;font-weight:bold'>公众号：Domeday</font><br>推送时间为：</p>\n<blockquote>\n<p>AM 7：00 ~ AM 8：30<br>PM 9：30 ~ PM 11：00</p>\n</blockquote>\n<p><span style='color:#B2B2B2'>在互联网这个行业，技术的更新迭代速度很快，唯有不断学习和尝试，我们才能立于不败之地，人都是做自己原本不能胜任的事情中，才能快速成长。所以，不要让任何事情成为你不去学习的理由！，你学过的每一样东西，都会在你一生的某个时候派上用场的。<br></span></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"gutter\"><pre><div class=\"line\">1</div></pre></td><td class=\"code\"><pre><div class=\"line\">GitHub=&gt; React Native BBS 组件已更新</div></pre></td></tr></table></figure>"},{"title":"Welcome to Trust blog","_content":"<!-- More -->\n\n#####欢迎你的加入！\n<font style='color:green;font-weight:bold'>公众号：Domeday</font>\n推送时间为：\n>AM 7：00 ~ AM 8：30 \n>PM 9：30 ~ PM 11：00","source":"_posts/Welcome to Trust blog.md","raw":"---\ntitle: Welcome to Trust blog  \n---\n<!-- More -->\n\n#####欢迎你的加入！\n<font style='color:green;font-weight:bold'>公众号：Domeday</font>\n推送时间为：\n>AM 7：00 ~ AM 8：30 \n>PM 9：30 ~ PM 11：00","slug":"Welcome to Trust blog","published":1,"date":"2017-02-12T00:24:38.940Z","updated":"2016-12-02T04:21:14.000Z","_id":"ciz1xi7vf0001v8gb5j0mssoy","comments":1,"layout":"post","photos":[],"link":"","content":"<a id=\"more\"></a>\n<p>#####欢迎你的加入！</p>\n<p><font style=\"color:green;font-weight:bold\">公众号：Domeday</font><br>推送时间为：</p>\n<blockquote>\n<p>AM 7：00 ~ AM 8：30<br>PM 9：30 ~ PM 11：00</p>\n</blockquote>\n","excerpt":"","more":"<p>#####欢迎你的加入！</p>\n<p><font style='color:green;font-weight:bold'>公众号：Domeday</font><br>推送时间为：</p>\n<blockquote>\n<p>AM 7：00 ~ AM 8：30<br>PM 9：30 ~ PM 11：00</p>\n</blockquote>"}],"PostAsset":[],"PostCategory":[],"PostTag":[],"Tag":[]}}